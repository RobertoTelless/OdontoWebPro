@using Presentation.Extensions
@model SystemBRPresentation.ViewModels.ContratoViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Contratos</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarAdmin", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaContrato", "GestaoComercial")">Contratos</a>
            </li>
            <li>
                <a href="@Url.Action("WorkflowContrato", "GestaoComercial")">Contratos - Workflow</a>
            </li>
            <li class="active">
                <strong>Contrato - Edição</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-2">
            <div class="widget style1 yellow-bg">
                <div class="row vertical-align">
                    <div class="col-xs-3">
                        <i class="fa fa-thumbs-o-up fa-3x"></i>
                    </div>
                    <div class="col-xs-9 text-right">
                        @if (Model.CONT_IN_CANCELADO == 1)
	                    {
                            <h3 class="font-normal">Cancelado</h3>
                        }
                        else
                        {
                            <h3 class="font-normal">Ativo</h3>
                        }
                    </div>
                </div>
            </div>
        </div>
        @if (Model.CONT_IN_CANCELADO == 0)
        {
            <div class="col-lg-2">
                <div class="widget style1 navy-bg">
                    <div class="row vertical-align">
                        <div class="col-xs-3">
                            <i class="fa fa-user fa-3x"></i>
                        </div>
                        <div class="col-xs-9 text-right">
                            @if (Model.CONT_IN_WORKFLOW == 1)
	                        {
                                <h3 class="font-normal">Aprovação</h3>
                            }
                            else if (Model.CONT_IN_WORKFLOW == 2)
                            {
                                <h3 class="font-normal">Preparação</h3>
                            }
                            else if (Model.CONT_IN_WORKFLOW == 3)
                            {
                                <h3 class="font-normal">Operação</h3>
                            }
                            else if (Model.CONT_IN_WORKFLOW == 4)
                            {
                                <h3 class="font-normal">Encerramento</h3>
                            }

                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Contrato - Edição</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Configuração 1</a>
                            </li>
                            <li>
                                <a href="#">Configuração 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                    <div class="tabs-container">
                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#tab-1">Dados Gerais</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-2">Dados Financeiros</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-3">Descrição</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-4">Informações Contábeis</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-5">Observações</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-6">Comissões</a></li>
                            <li class=""><a data-toggle="tab" href="#tab-7">Anexos</a></li>
                        </ul>
                        <div class="tab-content">
                           
                            @*Dados Gerais*@
                            <div id="tab-1" class="tab-pane active">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                    @Html.HiddenFor(m => m.CECU_CD_ID)
                                                    @Html.HiddenFor(m => m.COLA_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                    @Html.HiddenFor(m => m.CONT_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO_DETALHADA)
                                                    @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                    @Html.HiddenFor(m => m.CONT_DS_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXTO_NF)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_PROXIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ULTIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                    @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_RENOVACAO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                    @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                    @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                    @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                    @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_NR_DIA_PAGAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_PC_PERCENT_PARCELAS)                                                  
                                                    @Html.HiddenFor(m => m.CONT_TX_OBSERVACOES)
                                                    @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_VL_VALOR)
                                                    @Html.HiddenFor(m => m.FOPA_CD_ID)
                                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                                    @Html.HiddenFor(m => m.NBSE_CD_ID)
                                                    @Html.HiddenFor(m => m.PERI_CD_ID)
                                                    @Html.HiddenFor(m => m.PLCO_CD_ID)
                                                    @Html.HiddenFor(m => m.STCT_CD_ID)
                                                    Categoria*
                                                    <div class="input-group">
                                                        @Html.DropDownListFor(m => m.CACT_CD_ID, (SelectList)ViewBag.Categorias, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                        @Html.ValidationMessageFor(m => m.CACT_CD_ID, "", new { @style = "color:red" })
                                                        <span class="input-group-btn">
                                                            @Html.ButtonLinkIndex(text: "+", action: "IncluirCategoriaContrato", controller: "TabelasAuxiliares", buttonClass: "white", routeValues: new { id = 3 })
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Tipo de Contrato
                                                    <div class="input-group">
                                                        @Html.DropDownListFor(m => m.TICT_CD_ID, (SelectList)ViewBag.Tipos, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                        @Html.ValidationMessageFor(m => m.TICT_CD_ID, "", new { @style = "color:red" })
                                                        <span class="input-group-btn">
                                                            @Html.ButtonLinkIndex(text: "+", action: "IncluirTipoContrato", controller: "TabelasAuxiliares", buttonClass: "white", routeValues: new { id = 3 })
                                                        </span>
                                                    </div>
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Template 
                                                    @Html.DropDownListFor(m => m.TEMP_CD_ID, (SelectList)ViewBag.Templates, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                    @Html.ValidationMessageFor(m => m.TEMP_CD_ID, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                @if (Model.CONT_IN_WORKFLOW == 1)
	                                            {
                                                    <div class="col-lg-4 col-md-4 col-xs-12">
                                                        Cliente* 
                                                        @Html.DropDownListFor(m => m.CLIE_CD_ID, (SelectList)ViewBag.Clientes, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                        @Html.ValidationMessageFor(m => m.CLIE_CD_ID, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Número*
                                                        @Html.TextBoxFor(m => m.CONT_NM_NUMERO_CONTRATO, new { @class = "form-control", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_NM_NUMERO_CONTRATO, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-6 col-md-6 col-xs-12">
                                                        Nome do Contrato*
                                                        @Html.TextBoxFor(m => m.CONT_NM_NOME, new { @class = "form-control", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_NM_NOME, "",new { @style="color:red" })
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-lg-4 col-md-4 col-xs-12">
                                                        Cliente* 
                                                        @Html.TextBoxFor(m => m.CLIENTE.CLIE_NM_NOME, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Número*
                                                        @Html.TextBoxFor(m => m.CONT_NM_NUMERO_CONTRATO, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-6 col-md-6 col-xs-12">
                                                        Nome do Contrato*
                                                        @Html.TextBoxFor(m => m.CONT_NM_NOME, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                }
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">  
                                                @if (Model.CONT_IN_WORKFLOW == 1)
                                                {
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Data Inicial*
                                                        @Html.TextBoxFor(m => m.CONT_DT_INICIO,"{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_DT_INICIO, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Data Final
                                                        @Html.TextBoxFor(m => m.CONT_DT_FINAL, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_DT_FINAL, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Carência (dias)
                                                        @Html.TextBoxFor(m => m.CONT_NR_CARENCIA, new { @class = "form-control touchspin1", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_NR_CARENCIA, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-4 col-md-4 col-xs-12">
                                                        Responsável* 
                                                        @Html.DropDownListFor(m => m.CONT_CD_RESPONSAVEL, (SelectList)ViewBag.Responsaveis, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                        @Html.ValidationMessageFor(m => m.CONT_CD_RESPONSAVEL, "",new { @style="color:red" })
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Data Inicial*
                                                        @Html.TextBoxFor(m => m.CONT_DT_INICIO,"{0:dd/MM/yyyy}", new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Data Final
                                                        @Html.TextBoxFor(m => m.CONT_DT_FINAL, "{0:dd/MM/yyyy}", new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Carência (dias)
                                                        @Html.TextBoxFor(m => m.CONT_NR_CARENCIA, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-4 col-md-4 col-xs-12">
                                                        Responsável* 
                                                        @Html.TextBoxFor(m => m.CONT_NM_RESPONSAVEL, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                }
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                    Objeto do Contrato
                                                    @Html.TextAreaFor(m => m.CONT_DS_DESCRICAO, new { @class = "form-control", style = "width: 1040px; height: 200px;", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.CONT_DS_DESCRICAO, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }
                             
                                </div>
                            </div>

                            @*Dados Financeiros*@
                            <div id="tab-2" class="tab-pane">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">      
                                                @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                @Html.HiddenFor(m => m.CACT_CD_ID)
                                                @Html.HiddenFor(m => m.CECU_CD_ID)
                                                @Html.HiddenFor(m => m.CLIE_CD_ID)
                                                @Html.HiddenFor(m => m.COLA_CD_ID)
                                                @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                @Html.HiddenFor(m => m.CONT_CD_ID)
                                                @Html.HiddenFor(m => m.CONT_CD_RESPONSAVEL)
                                                @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                @Html.HiddenFor(m => m.CONT_DS_DESCRICAO)
                                                @Html.HiddenFor(m => m.CONT_DS_DESCRICAO_DETALHADA)
                                                @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                @Html.HiddenFor(m => m.CONT_DS_TEXTO_NF)
                                                @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                @Html.HiddenFor(m => m.CONT_DT_FINAL)
                                                @Html.HiddenFor(m => m.CONT_DT_INICIO)                                                  
                                                @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                @Html.HiddenFor(m => m.CONT_NM_NOME)
                                                @Html.HiddenFor(m => m.CONT_NM_NUMERO_CONTRATO)
                                                @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                @Html.HiddenFor(m => m.CONT_NR_CARENCIA)
                                                @Html.HiddenFor(m => m.CONT_NR_PARCELAS_CONTRATO)
                                                @Html.HiddenFor(m => m.CONT_PC_PERCENT_PARCELAS)                                                  
                                                @Html.HiddenFor(m => m.CONT_TX_OBSERVACOES)
                                                @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                @Html.HiddenFor(m => m.MATR_CD_ID)
                                                @Html.HiddenFor(m => m.NBSE_CD_ID)
                                                @Html.HiddenFor(m => m.PLCO_CD_ID)
                                                @Html.HiddenFor(m => m.STCT_CD_ID)
                                                @Html.HiddenFor(m => m.TEMP_CD_ID)
                                                @Html.HiddenFor(m => m.TICT_CD_ID)
                                                @if (Model.CONT_IN_WORKFLOW == 1)
	                                            {
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Valor*
                                                        @Html.TextBoxFor(m => m.CONT_VL_VALOR, new { @class = "form-control", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_VL_VALOR, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Num.Parcelas*
                                                        @Html.TextBoxFor(m => m.CONT_NR_PARCELAS, new { @class = "form-control", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_NR_PARCELAS, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Dia Pagamento
                                                        @Html.TextBoxFor(m => m.CONT_NR_DIA_PAGAMENTO, new { @class = "form-control touchspin2", autofocus = true })
                                                        @Html.ValidationMessageFor(m => m.CONT_NR_DIA_PAGAMENTO, "",new { @style="color:red" })
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Periodicidade
                                                        <div class="input-group">
                                                            @Html.DropDownListFor(m => m.PERI_CD_ID, (SelectList)ViewBag.Periodicidades, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                            @Html.ValidationMessageFor(m => m.PERI_CD_ID, "", new { @style = "color:red" })
                                                            <span class="input-group-btn">
                                                                @Html.ButtonLinkIndex(text: "+", action: "IncluirPeriodicidade", controller: "TabelasAuxiliares", buttonClass: "white", routeValues: new { id = 3 })
                                                            </span>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Forma de Pagamento 
                                                        <div class="input-group">
                                                            @Html.DropDownListFor(m => m.FOPA_CD_ID, (SelectList)ViewBag.Formas, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                            @Html.ValidationMessageFor(m => m.FOPA_CD_ID, "", new { @style = "color:red" })
                                                            <span class="input-group-btn">
                                                                @Html.ButtonLinkIndex(text: "+", action: "IncluirFormaPagamento", controller: "TabelasAuxiliares", buttonClass: "white", routeValues: new { id = 3 })
                                                            </span>
                                                        </div>
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Valor*
                                                        @Html.TextBoxFor(m => m.CONT_VL_VALOR, new { @class = "form-control", autofocus = true, @readonly="readonly" })
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Num.Parcelas*
                                                        @Html.TextBoxFor(m => m.CONT_NR_PARCELAS, new { @class = "form-control", autofocus = true , @readonly="readonly"})
                                                    </div>
                                                    <div class="col-lg-2 col-md-2 col-xs-12">
                                                        Dia Pagamento
                                                        @Html.TextBoxFor(m => m.CONT_NR_DIA_PAGAMENTO, new { @class = "form-control", autofocus = true , @readonly="readonly"})
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Periodicidade
                                                        @Html.TextBoxFor(m => m.PERIODICIDADE.PERI_NM_NOME, new { @class = "form-control", autofocus = true , @readonly="readonly"})
                                                    </div>
                                                    <div class="col-lg-3 col-md-3 col-xs-12">
                                                        Forma de Pagamento 
                                                        @Html.TextBoxFor(m => m.FORMA_PAGAMENTO.FOPA_NM_NOME, new { @class = "form-control", autofocus = true , @readonly="readonly"})
                                                    </div>
                                                }
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Último Reajuste
                                                    @Html.TextBoxFor(m => m.CONT_DT_ULTIMO_REAJUSTE, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_DT_ULTIMO_REAJUSTE, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Próximo Reajuste
                                                    @Html.TextBoxFor(m => m.CONT_DT_PROXIMO_REAJUSTE, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_DT_PROXIMO_REAJUSTE, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Período da cobrança
                                                    @Html.DropDownListFor(m => m.CONT_IN_PERIODO_COBRANCA, (SelectList)ViewBag.PeriodoCobranca, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                                    @Html.ValidationMessageFor(m => m.CONT_IN_PERIODO_COBRANCA, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Mensagem de Renovação?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.MensagemRenovacao, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.MensagemRenovacao, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Antecedencia (dias)
                                                    @Html.TextBoxFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO, new { @class = "form-control touchspin2", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Mensagem das Parcelas?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.MensagemParcela, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.MensagemParcela, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Antecedencia (dias)
                                                    @Html.TextBoxFor(m => m.CONT_IN_DIAS_MENS_PARCELA, new { @class = "form-control touchspin2", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_IN_DIAS_MENS_PARCELA, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }                             
                                </div>
                            </div>

                            @*Descrição*@
                            <div id="tab-3" class="tab-pane">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                    @Html.HiddenFor(m => m.CACT_CD_ID)
                                                    @Html.HiddenFor(m => m.CECU_CD_ID)
                                                    @Html.HiddenFor(m => m.CLIE_CD_ID)
                                                    @Html.HiddenFor(m => m.COLA_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                    @Html.HiddenFor(m => m.CONT_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                    @Html.HiddenFor(m => m.CONT_DS_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXTO_NF)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_FINAL)
                                                    @Html.HiddenFor(m => m.CONT_DT_INICIO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_DT_PROXIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ULTIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                    @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_RENOVACAO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                    @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                    @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                    @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                    @Html.HiddenFor(m => m.CONT_NM_NOME)
                                                    @Html.HiddenFor(m => m.CONT_NM_NUMERO_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_NR_CARENCIA)
                                                    @Html.HiddenFor(m => m.CONT_NR_DIA_PAGAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_PC_PERCENT_PARCELAS)                                                  
                                                    @Html.HiddenFor(m => m.CONT_TX_OBSERVACOES)
                                                    @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_VL_VALOR)
                                                    @Html.HiddenFor(m => m.FOPA_CD_ID)
                                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                                    @Html.HiddenFor(m => m.NBSE_CD_ID)
                                                    @Html.HiddenFor(m => m.PERI_CD_ID)
                                                    @Html.HiddenFor(m => m.PLCO_CD_ID)
                                                    @Html.HiddenFor(m => m.STCT_CD_ID)
                                                    @Html.HiddenFor(m => m.TEMP_CD_ID)
                                                    @Html.HiddenFor(m => m.TICT_CD_ID)
                                                    Descrição do Contrato
                                                    @Html.TextAreaFor(m => m.CONT_DS_DESCRICAO_DETALHADA, new { @class = "form-control", style = "width: 1040px; height: 400px;", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.CONT_DS_DESCRICAO_DETALHADA, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }
                                </div>
                            </div>

                            @*Informações Contábeis*@
                            <div id="tab-4" class="tab-pane">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-4 col-md-4 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                    @Html.HiddenFor(m => m.CACT_CD_ID)
                                                    @Html.HiddenFor(m => m.CLIE_CD_ID)
                                                    @Html.HiddenFor(m => m.COLA_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                    @Html.HiddenFor(m => m.CONT_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO_DETALHADA)
                                                    @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                    @Html.HiddenFor(m => m.CONT_DS_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_FINAL)
                                                    @Html.HiddenFor(m => m.CONT_DT_INICIO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_DT_PROXIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ULTIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                    @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_RENOVACAO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                    @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                    @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                    @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                    @Html.HiddenFor(m => m.CONT_NM_NOME)
                                                    @Html.HiddenFor(m => m.CONT_NM_NUMERO_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_NR_CARENCIA)
                                                    @Html.HiddenFor(m => m.CONT_NR_DIA_PAGAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_PC_PERCENT_PARCELAS)                                                  
                                                    @Html.HiddenFor(m => m.CONT_TX_OBSERVACOES)
                                                    @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_VL_VALOR)
                                                    @Html.HiddenFor(m => m.FOPA_CD_ID)
                                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                                    @Html.HiddenFor(m => m.PERI_CD_ID)
                                                    @Html.HiddenFor(m => m.STCT_CD_ID)
                                                    @Html.HiddenFor(m => m.TEMP_CD_ID)
                                                    @Html.HiddenFor(m => m.TICT_CD_ID)
                                                    Conta Contábil
                                                    @Html.DropDownListFor(m => m.PLCO_CD_ID, (SelectList)ViewBag.Planos, "Selecionar", new { @class = "form-control" , autofocus = true})                            
                                                    @Html.ValidationMessageFor(m => m.PLCO_CD_ID, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Centro de Custos
                                                    @Html.DropDownListFor(m => m.CECU_CD_ID, (SelectList)ViewBag.Centros, "Selecionar", new { @class = "form-control" , autofocus = true})                            
                                                    @Html.ValidationMessageFor(m => m.CECU_CD_ID, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-3 col-md-3 col-xs-12">
                                                    Nomenc.Bras. de Serviços
                                                    @Html.DropDownListFor(m => m.NBSE_CD_ID, (SelectList)ViewBag.Nomenclaturas, "Selecionar", new { @class = "form-control" , autofocus = true})                            
                                                    @Html.ValidationMessageFor(m => m.NBSE_CD_ID, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Sincronizar Financeiro?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.Sincronizar, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.Sincronizar, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Emitir NF?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.NF, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.NF, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Reter ISS?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.ISS, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.ISS, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Reter IR?
                                                    <br />
                                                    @Html.CheckBoxFor(m => m.IR, new { @class = "checkbox i-checks", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.IR, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                    Texto da Nota Fiscal
                                                    @Html.TextAreaFor(m => m.CONT_DS_TEXTO_NF, new { @class = "form-control", style = "width: 1040px; height: 200px;", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.CONT_DS_TEXTO_NF, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }
                             
                                </div>
                            </div>

                            @*Observações*@
                            <div id="tab-5" class="tab-pane">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;"> 
                                                <div class="col-lg-12 col-md-12 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                    @Html.HiddenFor(m => m.CACT_CD_ID)
                                                    @Html.HiddenFor(m => m.CECU_CD_ID)
                                                    @Html.HiddenFor(m => m.CLIE_CD_ID)
                                                    @Html.HiddenFor(m => m.COLA_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                    @Html.HiddenFor(m => m.CONT_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO_DETALHADA)
                                                    @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                    @Html.HiddenFor(m => m.CONT_DS_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXTO_NF)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_FINAL)
                                                    @Html.HiddenFor(m => m.CONT_DT_INICIO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_DT_PROXIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ULTIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                    @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_RENOVACAO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                    @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                    @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                    @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                    @Html.HiddenFor(m => m.CONT_NM_NOME)
                                                    @Html.HiddenFor(m => m.CONT_NM_NUMERO_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_NR_CARENCIA)
                                                    @Html.HiddenFor(m => m.CONT_NR_DIA_PAGAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_PC_PERCENT_PARCELAS)                                                  
                                                    @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_VL_VALOR)
                                                    @Html.HiddenFor(m => m.FOPA_CD_ID)
                                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                                    @Html.HiddenFor(m => m.NBSE_CD_ID)
                                                    @Html.HiddenFor(m => m.PERI_CD_ID)
                                                    @Html.HiddenFor(m => m.PLCO_CD_ID)
                                                    @Html.HiddenFor(m => m.STCT_CD_ID)
                                                    @Html.HiddenFor(m => m.TEMP_CD_ID)
                                                    @Html.HiddenFor(m => m.TICT_CD_ID)

                                                    Observações
                                                    @Html.TextAreaFor(m => m.CONT_TX_OBSERVACOES, new { @class = "form-control", style = "width: 1040px; height: 400px;", autofocus = true})
                                                    @Html.ValidationMessageFor(m => m.CONT_TX_OBSERVACOES, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }
                                </div>
                            </div>

                            @*Comissões*@
                            <div id="tab-6" class="tab-pane">
                                <div class="panel-body">
                                    @using (Html.BeginForm("EditarContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                                        {
                                            <div class="alert alert-danger">
                                                <button type="button" class="close" data-dismiss="alert">×</button>
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            </div>
                                        }
                                        <div class="row">
                                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                                <div class="col-lg-4 col-md-4 col-xs-12">
                                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                                    @Html.HiddenFor(m => m.CACT_CD_ID)
                                                    @Html.HiddenFor(m => m.CECU_CD_ID)
                                                    @Html.HiddenFor(m => m.CLIE_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_APROVADOR)
                                                    @Html.HiddenFor(m => m.CONT_CD_ID)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_CD_RESP_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DS_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_DESCRICAO_DETALHADA)
                                                    @Html.HiddenFor(m => m.CONT_DS_INFO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DS_JUSTIFICATIVA)
                                                    @Html.HiddenFor(m => m.CONT_DS_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXTO_NF)
                                                    @Html.HiddenFor(m => m.CONT_DS_TEXT_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_CANCELAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ENCERRAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_DT_FINAL)
                                                    @Html.HiddenFor(m => m.CONT_DT_INICIO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_DT_PROXIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_DT_SOLICITACAO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_DT_ULTIMO_REAJUSTE)
                                                    @Html.HiddenFor(m => m.CONT_IN_APROVADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ATIVO)
                                                    @Html.HiddenFor(m => m.CONT_IN_AVALIACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CANCELADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_CR_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_DIAS_MENS_RENOVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_EMITE_NF)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENCERRADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ENVIO_APROVACAO)
                                                    @Html.HiddenFor(m => m.CONT_IN_FINANCEIRO)
                                                    @Html.HiddenFor(m => m.CONT_IN_IR_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_ISS_RETIDO)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_IN_MENSAGEM_RENOVACAO)                                                  
                                                    @Html.HiddenFor(m => m.CONT_IN_PARCELA_GERADA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PERIODO_COBRANCA)
                                                    @Html.HiddenFor(m => m.CONT_IN_PREPARADO)
                                                    @Html.HiddenFor(m => m.CONT_IN_SINCRONIZA)
                                                    @Html.HiddenFor(m => m.CONT_IN_STATUS)
                                                    @Html.HiddenFor(m => m.CONT_IN_WORKFLOW)
                                                    @Html.HiddenFor(m => m.CONT_NM_MOTIVO)
                                                    @Html.HiddenFor(m => m.CONT_NM_NOME)
                                                    @Html.HiddenFor(m => m.CONT_NM_NUMERO_CONTRATO)
                                                    @Html.HiddenFor(m => m.CONT_NM_RESPONSAVEL)
                                                    @Html.HiddenFor(m => m.CONT_NR_CARENCIA)
                                                    @Html.HiddenFor(m => m.CONT_NR_DIA_PAGAMENTO)
                                                    @Html.HiddenFor(m => m.CONT_NR_PARCELAS)
                                                    @Html.HiddenFor(m => m.CONT_TX_OBSERVACOES)
                                                    @Html.HiddenFor(m => m.CONT_VL_PARCELA)
                                                    @Html.HiddenFor(m => m.CONT_VL_VALOR)
                                                    @Html.HiddenFor(m => m.FOPA_CD_ID)
                                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                                    @Html.HiddenFor(m => m.NBSE_CD_ID)
                                                    @Html.HiddenFor(m => m.PERI_CD_ID)
                                                    @Html.HiddenFor(m => m.PLCO_CD_ID)
                                                    @Html.HiddenFor(m => m.STCT_CD_ID)
                                                    @Html.HiddenFor(m => m.TEMP_CD_ID)
                                                    @Html.HiddenFor(m => m.TICT_CD_ID)
                                                    Vendedor
                                                    @Html.DropDownListFor(m => m.COLA_CD_ID, (SelectList)ViewBag.Vendedores, "Selecionar", new { @class = "form-control" , autofocus = true})                            
                                                    @Html.ValidationMessageFor(m => m.COLA_CD_ID, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Parcelas
                                                    @Html.TextBoxFor(m => m.CONT_NR_PARCELAS_CONTRATO, new { @class = "form-control touchspin3", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_NR_PARCELAS_CONTRATO, "",new { @style="color:red" })
                                                </div>
                                                <div class="col-lg-2 col-md-2 col-xs-12">
                                                    Perc.Parcelas (%)
                                                    @Html.TextBoxFor(m => m.CONT_PC_PERCENT_PARCELAS, new { @class = "form-control touchspin4", autofocus = true })
                                                    @Html.ValidationMessageFor(m => m.CONT_PC_PERCENT_PARCELAS, "",new { @style="color:red" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.ButtonActionSubmit(text: "Confirma edição de Contrato", htmlAttributes: new { id = "basictoast" })
                                        </div>
                                    }
                             
                                </div>
                            </div>

                            @*Anexos*@
                            <div id="tab-7" class="tab-pane">
                                <div class="panel-body">
                                    <div class="row">
                                        <hr />
                                        <div class="col-lg-12 col-md-12 col-xs-12"> 
                                            <h4>Anexos do Contrato</h4>
                                            <br />
                                            <div class="form-group">
                                                @using (Html.BeginForm("UploadFileContrato", "GestaoComercial", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", @id="pwd-container2" }))
                                                {
                                                    <div class="ibox-content">
                                                        @if (Model.CONTRATO_ANEXO.Count > 0)
                                                        {
                                                            <table class="table table-striped table-bordered table-hover dataTables-example">
                                                                <thead>
                                                                    <tr>
                                                                        <th>Título</th>
                                                                        <th>Data</th>
                                                                        <th>Tipo</th>
                                                                        <th class="td-one-action">Ações</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    @foreach (var cond in (Model.CONTRATO_ANEXO))
                                                                    {
                                                                        <tr>
                                                                            <td>@cond.COAN_NM_TITULO</td>
                                                                            <td>@cond.COAN_DT_ANEXO.ToShortDateString()</td>
                                                                            @if (cond.COAN_IN_TIPO == 1)
	                                                                        {
                                                                                <td>Imagem</td>
                                                                            }
                                                                            else
                                                                            {
                                                                                <td>Arquivo</td>
                                                                            }
                                                                            <td class="td-one-action">
                                                                                @if (cond.COAN_IN_TIPO == 1 | cond.COAN_IN_TIPO == 2)
	                                                                            {
                                                                                    @Html.TableLinkDetails(cond.COAN_CD_ID, "VerAnexoContrato","fa-camera", "Visualizar Anexo")
                                                                                }
                                                                                else
                                                                                {
                                                                                    @Html.TableLinkDetails(cond.COAN_CD_ID, "VerAnexoContratoPDF","fa-file-pdf-o", "Visualizar Documento")
                                                                                }
                                                                                @Html.TableLinkDetails(cond.COAN_CD_ID, "DownloadContrato","fa-download", "Download Anexo")
                                                                            </td>
                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        }
                                                        <input type="file" name="file" id="file" class="btn btn-sm btn-warning"/>
                                                        <br />
                                                        <div class="form-group">
                                                            <input type="submit" value="Incluir Anexo do Contrato" class="btn btn-sm btn-success" />
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <br />
                    @Html.ButtonLinkIndex(text: "Cancelar", action: "VoltarBaseContrato", controller: "GestaoComercial")
                </div>
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/sweetAlertStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/sparkline")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    @Scripts.Render("~/plugins/sweetAlert")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
    
    <script type="text/javascript">
        $(document).ready(function () {

            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'Excel' },
                    { extend: 'pdf', title: 'PDF' },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]

            });

           

        });
    </script>

    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
            .css("display", "normal")
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Selecione uma data",
                text: false 
            });
        });
    </script>  
    <script type="text/javascript">
        $(".touchspin1").TouchSpin({
            min: 1,
            max: 90,
            step: 1,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>
    <script type="text/javascript">
        $(".touchspin2").TouchSpin({
            min: 1,
            max: 31,
            step: 1,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>
    <script type="text/javascript">
        $(".touchspin3").TouchSpin({
            min: 1,
            max: 12,
            step: 1,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>
    <script type="text/javascript">
        $(".touchspin4").TouchSpin({
            min: 1,
            max: 100,
            step: 1,
            buttondown_class: 'btn btn-white',
            buttonup_class: 'btn btn-white'
        });
    </script>


    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('body').addClass('light-navbar');

            $("#sparkline1").sparkline([34, 43, 43, 35, 44, 32, 44, 52], {
                type: 'line',
                width: '100%',
                height: '60',
                lineColor: '#1ab394',
                fillColor: "#ffffff"
            });

        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Edição com sucesso!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
