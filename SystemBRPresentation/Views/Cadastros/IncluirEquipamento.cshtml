@using Presentation.Extensions
@model SystemBRPresentation.ViewModels.EquipamentoViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Equipamentos</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaEquipamento", "Cadastros")">Equipamentos</a>
            </li>
            <li class="active">
                <strong>Equipamento - Inclusão</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Equipamento - Inclusão</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Configuração 1</a>
                            </li>
                            <li>
                                <a href="#">Configuração 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                @using (Html.BeginForm("IncluirEquipamento", "Cadastros", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                {
                    <div class="ibox-content">
                        @Html.AntiForgeryToken()
                        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">×</button>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </div>
                        }
                        <div class="row">
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-4 col-md-4 col-xs-12">
                                    @Html.HiddenFor(m => m.ASSI_CD_ID)
                                    @Html.HiddenFor(m => m.EQUI_DT_CADASTRO)
                                    @Html.HiddenFor(m => m.EQUI_IN_ATIVO)
                                    @Html.HiddenFor(m => m.MATR_CD_ID)
                                    Categoria*
                                    <div class="input-group">
                                        @Html.DropDownListFor(m => m.CAEQ_CD_ID, (SelectList)ViewBag.Tipos, "Selecionar", new { @class = "form-control", autofocus = true })                            
                                        @Html.ValidationMessageFor(m => m.CAEQ_CD_ID, "", new { @style = "color:red" })
                                        <span class="input-group-btn">
                                            @Html.ButtonLinkIndex(text: "+", action: "IncluirCategoriaEquipamento", controller: "TabelasAuxiliares", buttonClass: "white", routeValues: new { id = 2 })
                                        </span>
                                    </div>
                                </div>
                                <div class="col-lg-4 col-md-4 col-xs-12">
                                    Filial
                                    @Html.DropDownListFor(m => m.FILI_CD_ID, (SelectList)ViewBag.Filiais, "Selecionar", new { @class = "form-control" })                            
                                    @Html.ValidationMessageFor(m => m.FILI_CD_ID, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-9 col-md-9 col-xs-12">
                                    Nome*
                                    @Html.TextBoxFor(m => m.EQUI_NM_NOME, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_NM_NOME, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Número
                                    @Html.TextBoxFor(m => m.EQUI_NR_NUMERO, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_NR_NUMERO, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">               
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Data de Compra
                                    @Html.TextBoxFor(m => m.EQUI_DT_COMPRA, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_DT_COMPRA, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Valor
                                    @Html.TextBoxFor(m => m.EQUI_VL_VALOR, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_VL_VALOR, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Vida Útil (Meses)
                                    @Html.TextBoxFor(m => m.EQUI_NR_VIDA_UTIL, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_NR_VIDA_UTIL, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-12 col-md-12 col-xs-12">
                                    Descrição
                                    @Html.TextAreaFor(m => m.EQUI_DS_DESCRICAO, new { @class = "form-control", style = "width: 1070px; height: 100px;", autofocus = true})
                                    @Html.ValidationMessageFor(m => m.EQUI_DS_DESCRICAO, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">               
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Data de Baixa
                                    @Html.TextBoxFor(m => m.EQUI_DT_BAIXA, "{0:dd/MM/yyyy}", new { @class = "form-control date-picker", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.EQUI_DT_BAIXA, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-9 col-md-9 col-xs-12">
                                    Motivo da Baixa
                                    @Html.TextAreaFor(m => m.EQUI_DS_MOTIVO_BAIXA, new { @class = "form-control", style = "width: 795px; height: 100px;", autofocus = true})
                                    @Html.ValidationMessageFor(m => m.EQUI_DS_MOTIVO_BAIXA, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">               
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Manutenção?
                                    <br />
                                    @Html.CheckBoxFor(m => m.AvisaManutencao, new { @class = "checkbox i-checks"})
                                    @Html.ValidationMessageFor(m => m.AvisaManutencao, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Periodicidade
                                    @Html.DropDownListFor(m => m.PERI_CD_ID, (SelectList)ViewBag.Periodicidades, "Selecionar", new { @class = "form-control" })                            
                                    @Html.ValidationMessageFor(m => m.PERI_CD_ID, "",new { @style="color:red" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.ButtonActionSubmit(text: "Confirma Inclusão de Equipamento", htmlAttributes: new { id = "basictoast" })
                            @Html.ButtonLinkIndex(text: "Cancelar", action: "VoltarBaseEquipamento", controller: "Cadastros")
                        </div>
                    </div>
                }
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />  
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    <script src="~/Scripts/jquery-3.1.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>

    <script type="text/javascript" language="javascript">
        $(function () {
            $('.date-picker').datepicker(
                {
                    dateFormat: 'dd/mm/yy',
                    dayNames: ['Domingo', 'Segunda', 'Terça', 'Quarta', 'Quinta', 'Sexta', 'Sábado'],
                    dayNamesMin: ['D', 'S', 'T', 'Q', 'Q', 'S', 'S', 'D'],
                    dayNamesShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'Sáb', 'Dom'],
                    monthNames: ['Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
                    monthNamesShort: ['Jan', 'Fev', 'Mar', 'Abr', 'Mai', 'Jun', 'Jul', 'Ago', 'Set', 'Out', 'Nov', 'Dez'],
                    nextText: 'Proximo',
                    prevText: 'Anterior',
                    showOn: "focus"
                }
            )
            .css("display", "normal")
            .next("button").button({
                icons: { primary: "ui-icon-calendar" },
                label: "Selecione uma data",
                text: false 
            });
        });
    </script>  
    
    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
        });
    </script>

    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Inclusão com sucesso!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
